Most CFT modules are pretty small, and ones that use similar
inputs/outputs should be placed on the same boards.

Module list:

FILE            Module
-------------------------------------------------------------------------------
ALU_1           ALU Binary Operator ROMs
                L Register
                B port buffer

ALU_2           ALU Unary Operator ROMs
            *** System Reset Vector (NOW: clock)
                ALU Port A buffer
            *** ALU Operation ROM selector (NOW: sequencer)

clock           Clock generator
                Reset debouncer/timer
                DBUS hold
                IBUS hold

ir_and_skip     op2_roll calculation (IR)
                op1_branch skip calculation (IR + N,Z,L flags)
                -SKIP calculation (IR, roll, branch, OP_IF)
                IR Register
                AGL (IR + PC) -> IBUS

MAR             Interrupt state machine (STI, CLI, I_FLAG, -IRQ) -> -INTS
                MAR (IBUS -> MAR)
                Address bus drive logic (MAR -> ABUS[0..15])
                Autoindex decoder & flag (MAR, -IEND) -> AINDEX

memory(*)       RAM (-RAMEN, ABUS[0..18]) -> DBUS
                ROM (-ROMEN, ABUS[0..18]) -> DBUS

memory_decdr(*) System I/O device (-IO, -W, ABUS) -> IODx
                Bank Register I/O device (IODx, -BANKR0..1) -> A13..20
                Bank File 0/1 Select (ABUS15, -MEM) -> -BANKR0..1
                RAM/ROM chip select (ABUS19..20, -MEM) -> -RAMEN0..1, -ROMEN0..1

register_PC     register & LOAD edge detection(-R_PC, -W_PC, -INC_PC) -> IBUS

register_DR     register & LOAD edge detection(-R_DR, -W_DR, -INC_DR) -> IBUS

register_A      register & LOAD edge detection(-R_A, -W_A, -INC_A) -> IBUS
                Zero flag (REG_A) -> F_ZERO

sequencer       Microcode PC (clock, -IEND, -RSTHOLD) -> UPC
                Microcode ROMs (-RESET, UPC, AINDEX, -SKIP, IR, -INTS, -RSTHOLD) -> (R_UNIT, OP_IF, -INCA, CPL, -CLL, -STI, -CLI, -INCPC, -INCDR, -MEM-, -IO, -R, -W, -IEND)
                (+) Data bus connection (-W, -R, -MEM, -IO, IBUS) -> DBUS
                Read unit decoding (GUARDPULSE, R_UNIT) -> -R_x (move AGL guardpulse OR gate to AGL itself; -R_CSx to be removed)
                Write unit decoding (W_UNIT, CLOCK14) -> -W_x

int_ctrl(*)(**) [System I/O device decoder (ABUS, IO, W, R) -> ICRSELx]
                Int mask register (ICRSELx, IBUS) -> [flipflop]
                Int status register (ICRSELx, IBUS) -> DBUS
                Interrupt logic (-IRQx) -> [flipflops] -> -IRQ (***)

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------


(*) Non-CPU devices
(**) Not designed yet.
(***) The interrupt logic needs access to both the internal -IRQ signal and the external -IRQx signals.
