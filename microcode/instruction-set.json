[
    {
        "mnemonic": "IRET",
        "split_mnemonic": [
            "IRET"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "0",
                "R": "0",
                "SUBOP": "000",
                "IDX": "XX",
                "COND": "1",
                "cycles": 11
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "0",
                "R": "0",
                "SUBOP": "000",
                "IDX": "XX",
                "COND": "0",
                "cycles": 11
            }
        ],
        "format": "0000:0:0:000:------0",
        "disasm": {
            "instr": 0,
            "mask": 65409,
            "weight": 10
        },
        "name": "Interrupt Return",
        "mode": "Implied",
        "desc": "Return from Interrupt",
        "flags": {
            "change": [
                "N",
                "Z",
                "V",
                "I",
                "L"
            ]
        },
        "groups": [
            "Flow Control"
        ]
    },
    {
        "mnemonic": "IRETC",
        "split_mnemonic": [
            "IRETC"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "0",
                "R": "0",
                "SUBOP": "000",
                "IDX": "XX",
                "COND": "1",
                "cycles": 11
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "0",
                "R": "0",
                "SUBOP": "000",
                "IDX": "XX",
                "COND": "0",
                "cycles": 11
            }
        ],
        "format": "0000:0:0:000:------1",
        "disasm": {
            "instr": 1,
            "mask": 65409,
            "weight": 10
        },
        "name": "Return From Interrupt and Clear Interrupt Flag",
        "mode": "Implied",
        "desc": "Return from Interrupt, disabling subsequent interrupts",
        "flags": {
            "change": [
                "N",
                "Z",
                "V",
                "I",
                "L"
            ]
        },
        "groups": [
            "Flow Control"
        ]
    },
    {
        "mnemonic": "LRET",
        "split_mnemonic": [
            "LRET"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "0",
                "R": "0",
                "SUBOP": "001",
                "COND": "X",
                "IDX": "XX",
                "cycles": 8
            }
        ],
        "format": "0000:0:0:001:-------",
        "disasm": {
            "instr": 128,
            "mask": 65408,
            "weight": 9
        },
        "name": "Long Return",
        "mode": "Implied",
        "desc": "Return from Long Subroutine Jump",
        "flags": {},
        "groups": [
            "Flow Control"
        ]
    },
    {
        "mnemonic": "RET",
        "split_mnemonic": [
            "RET"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "0",
                "R": "0",
                "SUBOP": "010",
                "COND": "X",
                "IDX": "XX",
                "cycles": 5
            }
        ],
        "format": "0000:0:0:010:-------",
        "disasm": {
            "instr": 256,
            "mask": 65408,
            "weight": 9
        },
        "name": "Return",
        "mode": "Implied",
        "desc": "Return from Subroutine",
        "flags": {},
        "groups": [
            "Flow Control"
        ]
    },
    {
        "mnemonic": "TAS",
        "split_mnemonic": [
            "TAS"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "0",
                "R": "0",
                "SUBOP": "011",
                "COND": "X",
                "IDX": "XX",
                "cycles": 3
            }
        ],
        "format": "0000:0:0:011:-------",
        "disasm": {
            "instr": 384,
            "mask": 65408,
            "weight": 9
        },
        "name": "Transfer Accumulator to Stack Pointer",
        "mode": "Implied",
        "desc": "Sets SP to the current value of the AC.",
        "flags": {},
        "groups": [
            "Transfer"
        ]
    },
    {
        "mnemonic": "TSA",
        "split_mnemonic": [
            "TSA"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "0",
                "R": "0",
                "SUBOP": "100",
                "COND": "X",
                "IDX": "XX",
                "cycles": 3
            }
        ],
        "format": "0000:0:0:100:-------",
        "disasm": {
            "instr": 512,
            "mask": 65408,
            "weight": 9
        },
        "name": "Transfer Stack Pointer to Accumulator",
        "mode": "Implied",
        "desc": "Sets AC to the current value of the SP.",
        "flags": {
            "change": [
                "N",
                "Z"
            ]
        },
        "groups": [
            "Transfer"
        ]
    },
    {
        "mnemonic": "TAD",
        "split_mnemonic": [
            "TAD"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "0",
                "R": "0",
                "SUBOP": "101",
                "COND": "X",
                "IDX": "XX",
                "cycles": 3
            }
        ],
        "format": "0000:0:0:101:-------",
        "disasm": {
            "instr": 640,
            "mask": 65408,
            "weight": 9
        },
        "name": "Transfer Accumulator to Data Register",
        "mode": "Implied",
        "desc": "Sets DR to the current value of the AC.",
        "flags": {},
        "groups": [
            "Transfer"
        ]
    },
    {
        "mnemonic": "TDA",
        "split_mnemonic": [
            "TDA"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "0",
                "R": "0",
                "SUBOP": "110",
                "COND": "X",
                "IDX": "XX",
                "cycles": 3
            }
        ],
        "format": "0000:0:0:110:-------",
        "disasm": {
            "instr": 768,
            "mask": 65408,
            "weight": 9
        },
        "name": "Transfer Data Register to Accumulator",
        "mode": "Implied",
        "desc": "Sets AC to the current value of the DR.",
        "flags": {
            "change": [
                "N",
                "Z"
            ]
        },
        "groups": [
            "Transfer"
        ]
    },
    {
        "mnemonic": "ISR",
        "split_mnemonic": [
            "ISR"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "0",
                "R": "1",
                "SUBOP": "000",
                "COND": "X",
                "IDX": "XX",
                "cycles": 9
            }
        ],
        "format": "0000:0:1:000:LLLLLLL",
        "disasm": {
            "instr": 1024,
            "mask": 65408,
            "weight": 9
        },
        "name": "Software Interrupt",
        "mode": "Literal (7-bit)",
        "desc": "Call Interrupt Service Routine",
        "flags": {
            "clear": [
                "i"
            ]
        },
        "groups": [
            "Flow Control"
        ]
    },
    {
        "mnemonic": "PHA",
        "split_mnemonic": [
            "PHA"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "0",
                "R": "1",
                "SUBOP": "001",
                "COND": "X",
                "IDX": "XX",
                "cycles": 4
            }
        ],
        "format": "0000:0:1:001:-------",
        "disasm": {
            "instr": 1152,
            "mask": 65408,
            "weight": 9
        },
        "name": "Push Accumulator",
        "mode": "Implied",
        "desc": "Pushes AC onto the Hardware Stack.",
        "flags": {},
        "groups": [
            "Stack"
        ]
    },
    {
        "mnemonic": "PPA",
        "split_mnemonic": [
            "PPA"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "0",
                "R": "1",
                "SUBOP": "010",
                "COND": "X",
                "IDX": "XX",
                "cycles": 5
            }
        ],
        "format": "0000:0:1:010:-------",
        "disasm": {
            "instr": 1280,
            "mask": 65408,
            "weight": 9
        },
        "name": "Pop Accumulator",
        "mode": "Implied",
        "desc": "Pops the AC from the Hardware Stack.",
        "flags": {
            "change": [
                "N",
                "Z"
            ]
        },
        "groups": [
            "Stack"
        ]
    },
    {
        "mnemonic": "PHF",
        "split_mnemonic": [
            "PHF"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "0",
                "R": "1",
                "SUBOP": "011",
                "COND": "X",
                "IDX": "XX",
                "cycles": 4
            }
        ],
        "format": "0000:0:1:011:-------",
        "disasm": {
            "instr": 1408,
            "mask": 65408,
            "weight": 9
        },
        "name": "Push Flags",
        "mode": "Implied",
        "desc": "Pushes Flags onto the Hardware Stack.",
        "flags": {},
        "groups": [
            "Stack"
        ]
    },
    {
        "mnemonic": "PPF",
        "split_mnemonic": [
            "PPF"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "0",
                "R": "1",
                "SUBOP": "100",
                "COND": "X",
                "IDX": "XX",
                "cycles": 5
            }
        ],
        "format": "0000:0:1:100:-------",
        "disasm": {
            "instr": 1536,
            "mask": 65408,
            "weight": 9
        },
        "name": "Pop Flags",
        "mode": "Implied",
        "desc": "Pops the Flags from the Hardware Stack.",
        "flags": {
            "change": [
                "V",
                "I",
                "L"
            ]
        },
        "groups": [
            "Stack"
        ]
    },
    {
        "mnemonic": "STI",
        "split_mnemonic": [
            "STI"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "0",
                "R": "1",
                "SUBOP": "101",
                "COND": "X",
                "IDX": "XX",
                "cycles": 3
            }
        ],
        "format": "0000:0:1:101:-------",
        "disasm": {
            "instr": 1664,
            "mask": 65408,
            "weight": 9
        },
        "name": "Set Interrupt Flag",
        "mode": "Implied",
        "desc": "Enables interrupt servicing.",
        "flags": {
            "set": [
                "I"
            ]
        },
        "groups": [
            "Flow Control"
        ]
    },
    {
        "mnemonic": "CLI",
        "split_mnemonic": [
            "CLI"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "0",
                "R": "1",
                "SUBOP": "110",
                "COND": "X",
                "IDX": "XX",
                "cycles": 3
            }
        ],
        "format": "0000:0:1:110:-------",
        "disasm": {
            "instr": 1792,
            "mask": 65408,
            "weight": 9
        },
        "name": "Clear Interrupt Flag",
        "mode": "Implied",
        "desc": "Disables interrupt servicing.",
        "flags": {
            "clear": [
                "i"
            ]
        },
        "groups": [
            "Flow Control"
        ]
    },
    {
        "mnemonic": "WAIT",
        "split_mnemonic": [
            "WAIT"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "0",
                "R": "1",
                "SUBOP": "111",
                "COND": "X",
                "IDX": "XX",
                "cycles": 16
            }
        ],
        "format": "0000:0:1:111:LLLLLLL",
        "disasm": {
            "instr": 1920,
            "mask": 65408,
            "weight": 9
        },
        "name": "Wait for Interrupt",
        "mode": "Literal (7-bit)",
        "desc": "Suspends program execution until an interrupt arrives.",
        "flags": {
            "set": [
                "I"
            ]
        },
        "groups": [
            "Flow Control"
        ]
    },
    {
        "mnemonic": "SHL",
        "split_mnemonic": [
            "SHL"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "0",
                "SUBOP": "000",
                "COND": "X",
                "IDX": "XX",
                "cycles": 8
            }
        ],
        "format": "0000:1:0:000:000LLLL",
        "disasm": {
            "instr": 2048,
            "mask": 65520,
            "weight": 12
        },
        "name": "Bitwise Shift Left",
        "mode": "Literal (4 bits)",
        "desc": "Shift Accumulator left.",
        "flags": {
            "change": [
                "N",
                "Z"
            ]
        },
        "groups": [
            "Arithmetic and Logic"
        ]
    },
    {
        "mnemonic": "(SRU) SHR",
        "split_mnemonic": [
            "SHR"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "0",
                "SUBOP": "000",
                "COND": "X",
                "IDX": "XX",
                "cycles": 8
            }
        ],
        "format": "0000:1:0:000:001LLLL",
        "disasm": {
            "instr": 2064,
            "mask": 65520,
            "weight": 12
        },
        "name": "Bitwise Shift Right",
        "mode": "Literal (4 bits)",
        "desc": "Shift Accumulator right without sign extension.",
        "flags": {
            "change": [
                "N",
                "Z"
            ]
        },
        "groups": [
            "Arithmetic and Logic"
        ]
    },
    {
        "mnemonic": "(SRU) ASR",
        "split_mnemonic": [
            "ASR"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "0",
                "SUBOP": "000",
                "COND": "X",
                "IDX": "XX",
                "cycles": 8
            }
        ],
        "format": "0000:1:0:000:011LLLL",
        "disasm": {
            "instr": 2096,
            "mask": 65520,
            "weight": 12
        },
        "name": "Arithmetic Shift Right",
        "mode": "Literal (4 bits)",
        "desc": "Shift Accumulator right with sign extension.",
        "flags": {
            "change": [
                "N",
                "Z"
            ]
        },
        "groups": [
            "Arithmetic and Logic"
        ]
    },
    {
        "mnemonic": "(SRU) ROL",
        "split_mnemonic": [
            "ROL"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "0",
                "SUBOP": "000",
                "COND": "X",
                "IDX": "XX",
                "cycles": 8
            }
        ],
        "format": "0000:1:0:000:100LLLL",
        "disasm": {
            "instr": 2112,
            "mask": 65520,
            "weight": 12
        },
        "name": "Roll Left",
        "mode": "Literal (4 bits)",
        "desc": "Roll Link and Accumulator left.",
        "flags": {
            "change": [
                "N",
                "Z",
                "L"
            ]
        },
        "groups": [
            "Arithmetic and Logic"
        ]
    },
    {
        "mnemonic": "(SRU) ROR",
        "split_mnemonic": [
            "ROR"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "0",
                "SUBOP": "000",
                "COND": "X",
                "IDX": "XX",
                "cycles": 8
            }
        ],
        "format": "0000:1:0:000:101LLLL",
        "disasm": {
            "instr": 2128,
            "mask": 65520,
            "weight": 12
        },
        "name": "Roll Right",
        "mode": "Literal (4 bits)",
        "desc": "Roll Link and Accumulator right.",
        "flags": {
            "change": [
                "N",
                "Z",
                "L"
            ]
        },
        "groups": [
            "Arithmetic and Logic"
        ]
    },
    {
        "mnemonic": "HCF",
        "split_mnemonic": [
            "HCF"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "011",
                "COND": "X",
                "IDX": "XX",
                "cycles": 16
            }
        ],
        "format": "0000:1:1:011:-------",
        "disasm": {
            "instr": 3456,
            "mask": 65408,
            "weight": 9
        },
        "name": "Halt and Catch Fire",
        "mode": "Implied",
        "desc": "Terminate operation and burn-in registers, perhaps literally.",
        "flags": {
            "change": [
                "N",
                "Z",
                "I",
                "L"
            ]
        },
        "groups": [
            "Miscellaneous"
        ]
    },
    {
        "mnemonic": "(UOP) CLA",
        "split_mnemonic": [
            "CLA"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "101",
                "IDX": "XX",
                "COND": "0",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "101",
                "IDX": "XX",
                "COND": "1",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "110",
                "IDX": "XX",
                "COND": "0",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "110",
                "IDX": "XX",
                "COND": "1",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "100",
                "COND": "0",
                "IDX": "XX",
                "cycles": 8
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "100",
                "COND": "1",
                "IDX": "XX",
                "cycles": 8
            }
        ],
        "format": "0000:1:1:101:-1-----",
        "disasm": {
            "instr": 3744,
            "mask": 65440,
            "weight": 10
        },
        "name": "Clear Accumulator",
        "mode": "Implied",
        "desc": "Set the AC to zero.",
        "flags": {
            "set": [
                "Z"
            ],
            "clear": [
                "n"
            ]
        },
        "groups": [
            "Unary Operations",
            "UOP"
        ]
    },
    {
        "mnemonic": "(UOP) CLL",
        "split_mnemonic": [
            "CLL"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "101",
                "IDX": "XX",
                "COND": "0",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "101",
                "IDX": "XX",
                "COND": "1",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "110",
                "IDX": "XX",
                "COND": "0",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "110",
                "IDX": "XX",
                "COND": "1",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "100",
                "COND": "0",
                "IDX": "XX",
                "cycles": 8
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "100",
                "COND": "1",
                "IDX": "XX",
                "cycles": 8
            }
        ],
        "format": "0000:1:1:101:--1----",
        "disasm": {
            "instr": 3728,
            "mask": 65424,
            "weight": 10
        },
        "name": "Clear Link",
        "mode": "Implied",
        "desc": "Clear the Link Register.",
        "flags": {
            "clear": [
                "l"
            ]
        },
        "groups": [
            "Unary Operations",
            "UOP"
        ]
    },
    {
        "mnemonic": "(UOP) NOT",
        "split_mnemonic": [
            "NOT"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "101",
                "IDX": "XX",
                "COND": "0",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "101",
                "IDX": "XX",
                "COND": "1",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "110",
                "IDX": "XX",
                "COND": "0",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "110",
                "IDX": "XX",
                "COND": "1",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "100",
                "COND": "0",
                "IDX": "XX",
                "cycles": 8
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "100",
                "COND": "1",
                "IDX": "XX",
                "cycles": 8
            }
        ],
        "format": "0000:1:1:101:---1---",
        "disasm": {
            "instr": 3720,
            "mask": 65416,
            "weight": 10
        },
        "name": "Complement Accumulator",
        "mode": "Implied",
        "desc": "Invert all bits in the Accumulator.",
        "flags": {
            "change": [
                "N",
                "Z"
            ]
        },
        "groups": [
            "Unary Operations",
            "UOP"
        ]
    },
    {
        "mnemonic": "(UOP) INC",
        "split_mnemonic": [
            "INC"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "101",
                "IDX": "XX",
                "COND": "0",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "101",
                "IDX": "XX",
                "COND": "1",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "110",
                "IDX": "XX",
                "COND": "0",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "110",
                "IDX": "XX",
                "COND": "1",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "100",
                "COND": "0",
                "IDX": "XX",
                "cycles": 8
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "100",
                "COND": "1",
                "IDX": "XX",
                "cycles": 8
            }
        ],
        "format": "0000:1:1:101:----1--",
        "disasm": {
            "instr": 3716,
            "mask": 65412,
            "weight": 10
        },
        "name": "Increment Accumulator",
        "mode": "Implied",
        "desc": "Increment <L,AC> by one.",
        "flags": {
            "change": [
                "N",
                "Z",
                "L"
            ]
        },
        "groups": [
            "Unary Operations",
            "UOP"
        ]
    },
    {
        "mnemonic": "(UOP) NEG",
        "split_mnemonic": [
            "NEG"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "101",
                "IDX": "XX",
                "COND": "0",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "101",
                "IDX": "XX",
                "COND": "1",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "110",
                "IDX": "XX",
                "COND": "0",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "110",
                "IDX": "XX",
                "COND": "1",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "100",
                "COND": "0",
                "IDX": "XX",
                "cycles": 8
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "100",
                "COND": "1",
                "IDX": "XX",
                "cycles": 8
            }
        ],
        "format": "0000:1:1:101:---11--",
        "disasm": {
            "instr": 3724,
            "mask": 65420,
            "weight": 11
        },
        "name": "Negate Accumulator",
        "mode": "Implied",
        "desc": "Two's complement negation of the AC.",
        "flags": {
            "change": [
                "N",
                "Z",
                "L"
            ]
        },
        "groups": [
            "Unary Operations",
            "UOP"
        ]
    },
    {
        "mnemonic": "(UOP) DEC",
        "split_mnemonic": [
            "DEC"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "101",
                "IDX": "XX",
                "COND": "0",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "101",
                "IDX": "XX",
                "COND": "1",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "110",
                "IDX": "XX",
                "COND": "0",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "110",
                "IDX": "XX",
                "COND": "1",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "100",
                "COND": "0",
                "IDX": "XX",
                "cycles": 8
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "100",
                "COND": "1",
                "IDX": "XX",
                "cycles": 8
            }
        ],
        "format": "0000:1:1:101:-----1-",
        "disasm": {
            "instr": 3714,
            "mask": 65410,
            "weight": 10
        },
        "name": "Decrement Accumulator",
        "mode": "Implied",
        "desc": "Decrement <L,AC> by one.",
        "flags": {
            "change": [
                "N",
                "Z",
                "L"
            ]
        },
        "groups": [
            "Unary Operations",
            "UOP"
        ]
    },
    {
        "mnemonic": "(UOP) CPL",
        "split_mnemonic": [
            "CPL"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "101",
                "IDX": "XX",
                "COND": "0",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "101",
                "IDX": "XX",
                "COND": "1",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "110",
                "IDX": "XX",
                "COND": "0",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "110",
                "IDX": "XX",
                "COND": "1",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "100",
                "COND": "0",
                "IDX": "XX",
                "cycles": 8
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "100",
                "COND": "1",
                "IDX": "XX",
                "cycles": 8
            }
        ],
        "format": "0000:1:1:101:------1",
        "disasm": {
            "instr": 3713,
            "mask": 65409,
            "weight": 10
        },
        "name": "Complement Link",
        "mode": "Implied",
        "desc": "Toggle the L Flag.",
        "flags": {
            "change": [
                "L"
            ]
        },
        "groups": [
            "Unary Operations",
            "UOP"
        ]
    },
    {
        "mnemonic": "(UOP) SEL",
        "split_mnemonic": [
            "SEL"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "101",
                "IDX": "XX",
                "COND": "0",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "101",
                "IDX": "XX",
                "COND": "1",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "110",
                "IDX": "XX",
                "COND": "0",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "110",
                "IDX": "XX",
                "COND": "1",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "100",
                "COND": "0",
                "IDX": "XX",
                "cycles": 8
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "100",
                "COND": "1",
                "IDX": "XX",
                "cycles": 8
            }
        ],
        "format": "0000:1:1:101:------1",
        "disasm": {
            "instr": 3713,
            "mask": 65409,
            "weight": 10
        },
        "name": "Set Link",
        "mode": "Implied",
        "desc": "Set the L Flag.",
        "flags": {
            "set": [
                "L"
            ]
        },
        "groups": [
            "Unary Operations",
            "UOP"
        ]
    },
    {
        "mnemonic": "IFL CLA",
        "split_mnemonic": [
            "IFL",
            "CLA"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "101",
                "IDX": "XX",
                "COND": "0",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "101",
                "IDX": "XX",
                "COND": "1",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "110",
                "IDX": "XX",
                "COND": "0",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "110",
                "IDX": "XX",
                "COND": "1",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "100",
                "COND": "0",
                "IDX": "XX",
                "cycles": 8
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "100",
                "COND": "1",
                "IDX": "XX",
                "cycles": 8
            }
        ],
        "format": "0000:1:1:101:-1-----",
        "disasm": {
            "instr": 3744,
            "mask": 65440,
            "weight": 10
        },
        "name": "Clear Accumulator If Link Set",
        "mode": "Implied",
        "desc": "Set the AC to zero if L is set.",
        "flags": {
            "change": [
                "N",
                "Z"
            ]
        },
        "groups": [
            "Unary Operations",
            "IFL"
        ]
    },
    {
        "mnemonic": "IFL CLL",
        "split_mnemonic": [
            "IFL",
            "CLL"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "101",
                "IDX": "XX",
                "COND": "0",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "101",
                "IDX": "XX",
                "COND": "1",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "110",
                "IDX": "XX",
                "COND": "0",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "110",
                "IDX": "XX",
                "COND": "1",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "100",
                "COND": "0",
                "IDX": "XX",
                "cycles": 8
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "100",
                "COND": "1",
                "IDX": "XX",
                "cycles": 8
            }
        ],
        "format": "0000:1:1:101:--1----",
        "disasm": {
            "instr": 3728,
            "mask": 65424,
            "weight": 10
        },
        "name": "Clear Link if Link Set",
        "mode": "Implied",
        "desc": "Clear the Link Register if L is set.",
        "flags": {
            "change": [
                "L"
            ]
        },
        "groups": [
            "Unary Operations",
            "UOP"
        ]
    },
    {
        "mnemonic": "IFL NOT",
        "split_mnemonic": [
            "IFL",
            "NOT"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "101",
                "IDX": "XX",
                "COND": "0",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "101",
                "IDX": "XX",
                "COND": "1",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "110",
                "IDX": "XX",
                "COND": "0",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "110",
                "IDX": "XX",
                "COND": "1",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "100",
                "COND": "0",
                "IDX": "XX",
                "cycles": 8
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "100",
                "COND": "1",
                "IDX": "XX",
                "cycles": 8
            }
        ],
        "format": "0000:1:1:101:---1---",
        "disasm": {
            "instr": 3720,
            "mask": 65416,
            "weight": 10
        },
        "name": "Complement Accumulator If Link Set",
        "mode": "Implied",
        "desc": "Invert all bits in the AC if L is set.",
        "flags": {
            "change": [
                "N",
                "Z"
            ]
        },
        "groups": [
            "Unary Operations",
            "IFL"
        ]
    },
    {
        "mnemonic": "IFL INC",
        "split_mnemonic": [
            "IFL",
            "INC"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "101",
                "IDX": "XX",
                "COND": "0",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "101",
                "IDX": "XX",
                "COND": "1",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "110",
                "IDX": "XX",
                "COND": "0",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "110",
                "IDX": "XX",
                "COND": "1",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "100",
                "COND": "0",
                "IDX": "XX",
                "cycles": 8
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "100",
                "COND": "1",
                "IDX": "XX",
                "cycles": 8
            }
        ],
        "format": "0000:1:1:101:----1--",
        "disasm": {
            "instr": 3716,
            "mask": 65412,
            "weight": 10
        },
        "name": "Increment Accumulator If Link Set",
        "mode": "Implied",
        "desc": "Increment <L,AC> by one if L is set.",
        "flags": {
            "change": [
                "N",
                "Z",
                "L"
            ]
        },
        "groups": [
            "Unary Operations",
            "IFL"
        ]
    },
    {
        "mnemonic": "IFL NEG",
        "split_mnemonic": [
            "IFL",
            "NEG"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "101",
                "IDX": "XX",
                "COND": "0",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "101",
                "IDX": "XX",
                "COND": "1",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "110",
                "IDX": "XX",
                "COND": "0",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "110",
                "IDX": "XX",
                "COND": "1",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "100",
                "COND": "0",
                "IDX": "XX",
                "cycles": 8
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "100",
                "COND": "1",
                "IDX": "XX",
                "cycles": 8
            }
        ],
        "format": "0000:1:1:101:---11--",
        "disasm": {
            "instr": 3724,
            "mask": 65420,
            "weight": 11
        },
        "name": "Negate Accumulator If Link Set",
        "mode": "Implied",
        "desc": "Perform two's complement negation of the AC if L is set.",
        "flags": {
            "change": [
                "N",
                "Z",
                "L"
            ]
        },
        "groups": [
            "Unary Operations",
            "IFL"
        ]
    },
    {
        "mnemonic": "IFL DEC",
        "split_mnemonic": [
            "IFL",
            "DEC"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "101",
                "IDX": "XX",
                "COND": "0",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "101",
                "IDX": "XX",
                "COND": "1",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "110",
                "IDX": "XX",
                "COND": "0",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "110",
                "IDX": "XX",
                "COND": "1",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "100",
                "COND": "0",
                "IDX": "XX",
                "cycles": 8
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "100",
                "COND": "1",
                "IDX": "XX",
                "cycles": 8
            }
        ],
        "format": "0000:1:1:101:-----1-",
        "disasm": {
            "instr": 3714,
            "mask": 65410,
            "weight": 10
        },
        "name": "Decrement Accumulator If Link Set",
        "mode": "Implied",
        "desc": "Decrement <L,AC> by one if L is set.",
        "flags": {
            "change": [
                "N",
                "Z",
                "L"
            ]
        },
        "groups": [
            "Unary Operations",
            "IFL"
        ]
    },
    {
        "mnemonic": "IFL CPL",
        "split_mnemonic": [
            "IFL",
            "CPL"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "101",
                "IDX": "XX",
                "COND": "0",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "101",
                "IDX": "XX",
                "COND": "1",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "110",
                "IDX": "XX",
                "COND": "0",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "110",
                "IDX": "XX",
                "COND": "1",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "100",
                "COND": "0",
                "IDX": "XX",
                "cycles": 8
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "100",
                "COND": "1",
                "IDX": "XX",
                "cycles": 8
            }
        ],
        "format": "0000:1:1:101:------1",
        "disasm": {
            "instr": 3713,
            "mask": 65409,
            "weight": 10
        },
        "name": "Complement Link If Link Set ***",
        "mode": "Implied",
        "desc": "Toggle the L Flag if L is set.",
        "flags": {
            "change": [
                "L"
            ]
        },
        "groups": [
            "Unary Operations",
            "IFL"
        ]
    },
    {
        "mnemonic": "IFL SEL",
        "split_mnemonic": [
            "IFL",
            "SEL"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "101",
                "IDX": "XX",
                "COND": "0",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "101",
                "IDX": "XX",
                "COND": "1",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "110",
                "IDX": "XX",
                "COND": "0",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "110",
                "IDX": "XX",
                "COND": "1",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "100",
                "COND": "0",
                "IDX": "XX",
                "cycles": 8
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "100",
                "COND": "1",
                "IDX": "XX",
                "cycles": 8
            }
        ],
        "format": "0000:1:1:101:------1",
        "disasm": {
            "instr": 3713,
            "mask": 65409,
            "weight": 10
        },
        "name": "Set Link",
        "mode": "Implied",
        "desc": "Set the L Flag.",
        "flags": {
            "change": [
                "L"
            ]
        },
        "groups": [
            "Unary Operations",
            "UOP"
        ]
    },
    {
        "mnemonic": "IFV CLA",
        "split_mnemonic": [
            "IFV",
            "CLA"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "101",
                "IDX": "XX",
                "COND": "0",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "101",
                "IDX": "XX",
                "COND": "1",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "110",
                "IDX": "XX",
                "COND": "0",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "110",
                "IDX": "XX",
                "COND": "1",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "100",
                "COND": "0",
                "IDX": "XX",
                "cycles": 8
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "100",
                "COND": "1",
                "IDX": "XX",
                "cycles": 8
            }
        ],
        "format": "0000:1:1:110:-1-----",
        "disasm": {
            "instr": 3872,
            "mask": 65440,
            "weight": 10
        },
        "name": "Clear Accumulator on Overflow",
        "mode": "Implied",
        "desc": "Set the Accumulator to zero if V is set.",
        "flags": {
            "set": [
                "Z"
            ],
            "clear": [
                "n"
            ]
        },
        "groups": [
            "Unary Operations",
            "IFV"
        ]
    },
    {
        "mnemonic": "IFV CLL",
        "split_mnemonic": [
            "IFV",
            "CLL"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "101",
                "IDX": "XX",
                "COND": "0",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "101",
                "IDX": "XX",
                "COND": "1",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "110",
                "IDX": "XX",
                "COND": "0",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "110",
                "IDX": "XX",
                "COND": "1",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "100",
                "COND": "0",
                "IDX": "XX",
                "cycles": 8
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "100",
                "COND": "1",
                "IDX": "XX",
                "cycles": 8
            }
        ],
        "format": "0000:1:1:110:--1----",
        "disasm": {
            "instr": 3856,
            "mask": 65424,
            "weight": 10
        },
        "name": "Clear Link on Overflow",
        "mode": "Implied",
        "desc": "Clear the Link Register if V is set.",
        "flags": {
            "change": [
                "L"
            ]
        },
        "groups": [
            "Unary Operations",
            "IFV"
        ]
    },
    {
        "mnemonic": "IFV NOT",
        "split_mnemonic": [
            "IFV",
            "NOT"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "101",
                "IDX": "XX",
                "COND": "0",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "101",
                "IDX": "XX",
                "COND": "1",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "110",
                "IDX": "XX",
                "COND": "0",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "110",
                "IDX": "XX",
                "COND": "1",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "100",
                "COND": "0",
                "IDX": "XX",
                "cycles": 8
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "100",
                "COND": "1",
                "IDX": "XX",
                "cycles": 8
            }
        ],
        "format": "0000:1:1:110:---1---",
        "disasm": {
            "instr": 3848,
            "mask": 65416,
            "weight": 10
        },
        "name": "Complement Accumulator on Overflow",
        "mode": "Implied",
        "desc": "Invert all bits in the Accumulator if V is set.",
        "flags": {
            "change": [
                "N",
                "Z"
            ]
        },
        "groups": [
            "Unary Operations",
            "IFV"
        ]
    },
    {
        "mnemonic": "IFV INC",
        "split_mnemonic": [
            "IFV",
            "INC"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "101",
                "IDX": "XX",
                "COND": "0",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "101",
                "IDX": "XX",
                "COND": "1",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "110",
                "IDX": "XX",
                "COND": "0",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "110",
                "IDX": "XX",
                "COND": "1",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "100",
                "COND": "0",
                "IDX": "XX",
                "cycles": 8
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "100",
                "COND": "1",
                "IDX": "XX",
                "cycles": 8
            }
        ],
        "format": "0000:1:1:110:----1--",
        "disasm": {
            "instr": 3844,
            "mask": 65412,
            "weight": 10
        },
        "name": "Increment Accumulator on Overflow",
        "mode": "Implied",
        "desc": "Increment <L,AC> by one if V is set.",
        "flags": {
            "change": [
                "N",
                "Z",
                "L"
            ]
        },
        "groups": [
            "Unary Operations",
            "UOP"
        ]
    },
    {
        "mnemonic": "IFV NEG",
        "split_mnemonic": [
            "IFV",
            "NEG"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "101",
                "IDX": "XX",
                "COND": "0",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "101",
                "IDX": "XX",
                "COND": "1",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "110",
                "IDX": "XX",
                "COND": "0",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "110",
                "IDX": "XX",
                "COND": "1",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "100",
                "COND": "0",
                "IDX": "XX",
                "cycles": 8
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "100",
                "COND": "1",
                "IDX": "XX",
                "cycles": 8
            }
        ],
        "format": "0000:1:1:110:---11--",
        "disasm": {
            "instr": 3852,
            "mask": 65420,
            "weight": 11
        },
        "name": "Negate Accumulator on Overflow",
        "mode": "Implied",
        "desc": "Two's complement negation of the AC if V is set.",
        "flags": {
            "change": [
                "N",
                "Z",
                "L"
            ]
        },
        "groups": [
            "Unary Operations",
            "UOP"
        ]
    },
    {
        "mnemonic": "IFV DEC",
        "split_mnemonic": [
            "IFV",
            "DEC"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "101",
                "IDX": "XX",
                "COND": "0",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "101",
                "IDX": "XX",
                "COND": "1",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "110",
                "IDX": "XX",
                "COND": "0",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "110",
                "IDX": "XX",
                "COND": "1",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "100",
                "COND": "0",
                "IDX": "XX",
                "cycles": 8
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "100",
                "COND": "1",
                "IDX": "XX",
                "cycles": 8
            }
        ],
        "format": "0000:1:1:110:-----1-",
        "disasm": {
            "instr": 3842,
            "mask": 65410,
            "weight": 10
        },
        "name": "Decrement Accumulator on Overflow",
        "mode": "Implied",
        "desc": "Decrement <L,AC> by one if V is set.",
        "flags": {
            "change": [
                "N",
                "Z",
                "L"
            ]
        },
        "groups": [
            "Unary Operations",
            "UOP"
        ]
    },
    {
        "mnemonic": "IFV CPL",
        "split_mnemonic": [
            "IFV",
            "CPL"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "101",
                "IDX": "XX",
                "COND": "0",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "101",
                "IDX": "XX",
                "COND": "1",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "110",
                "IDX": "XX",
                "COND": "0",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "110",
                "IDX": "XX",
                "COND": "1",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "100",
                "COND": "0",
                "IDX": "XX",
                "cycles": 8
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "100",
                "COND": "1",
                "IDX": "XX",
                "cycles": 8
            }
        ],
        "format": "0000:1:1:110:------1",
        "disasm": {
            "instr": 3841,
            "mask": 65409,
            "weight": 10
        },
        "name": "Complement Link on Overflow",
        "mode": "Implied",
        "desc": "Toggle the L Flag if V is set.",
        "flags": {
            "change": [
                "L"
            ]
        },
        "groups": [
            "Unary Operations",
            "UOP"
        ]
    },
    {
        "mnemonic": "IFV SEL",
        "split_mnemonic": [
            "IFV",
            "SEL"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "101",
                "IDX": "XX",
                "COND": "0",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "101",
                "IDX": "XX",
                "COND": "1",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "110",
                "IDX": "XX",
                "COND": "0",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "110",
                "IDX": "XX",
                "COND": "1",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "100",
                "COND": "0",
                "IDX": "XX",
                "cycles": 8
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "100",
                "COND": "1",
                "IDX": "XX",
                "cycles": 8
            }
        ],
        "format": "0000:1:1:110:------1",
        "disasm": {
            "instr": 3841,
            "mask": 65409,
            "weight": 10
        },
        "name": "Set Link on Overflow",
        "mode": "Implied",
        "desc": "Toggle the L Flag if V is set.",
        "flags": {
            "set": [
                "L"
            ]
        },
        "groups": [
            "Unary Operations",
            "UOP"
        ]
    },
    {
        "mnemonic": "(SKP) NOP",
        "split_mnemonic": [
            "NOP"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "0",
                "SUBOP": "001",
                "COND": "0",
                "IDX": "XX",
                "cycles": 3
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "0",
                "SUBOP": "001",
                "COND": "0",
                "IDX": "XX",
                "cycles": 3
            }
        ],
        "format": "0000:1:0:001:--00000",
        "disasm": {
            "instr": 2176,
            "mask": 65439,
            "weight": 14
        },
        "name": "No Operation",
        "mode": "Implied",
        "desc": "Never skip (do nothing).",
        "flags": {},
        "groups": [
            "Flow Control",
            "SKP"
        ]
    },
    {
        "mnemonic": "(SKP) SNA",
        "split_mnemonic": [
            "SNA"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "0",
                "SUBOP": "001",
                "COND": "0",
                "IDX": "XX",
                "cycles": 3
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "0",
                "SUBOP": "001",
                "COND": "0",
                "IDX": "XX",
                "cycles": 3
            }
        ],
        "format": "0000:1:0:001:--01---",
        "disasm": {
            "instr": 2184,
            "mask": 65432,
            "weight": 11
        },
        "name": "Skip on Negative Accumulator",
        "mode": "Implied",
        "desc": "Skip next instruction if AC is less than zero.",
        "flags": {},
        "groups": [
            "Flow Control",
            "SKP"
        ]
    },
    {
        "mnemonic": "(SKP) SZA",
        "split_mnemonic": [
            "SZA"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "0",
                "SUBOP": "001",
                "COND": "0",
                "IDX": "XX",
                "cycles": 3
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "0",
                "SUBOP": "001",
                "COND": "0",
                "IDX": "XX",
                "cycles": 3
            }
        ],
        "format": "0000:1:0:001:--0-1--",
        "disasm": {
            "instr": 2180,
            "mask": 65428,
            "weight": 11
        },
        "name": "Skip on Zero Accumulator",
        "mode": "Implied",
        "desc": "Skip next instruction if AC is equal to zero.",
        "flags": {},
        "groups": [
            "Flow Control",
            "SKP"
        ]
    },
    {
        "mnemonic": "(SKP) SNP",
        "split_mnemonic": [
            "SNP"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "0",
                "SUBOP": "001",
                "COND": "0",
                "IDX": "XX",
                "cycles": 3
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "0",
                "SUBOP": "001",
                "COND": "0",
                "IDX": "XX",
                "cycles": 3
            }
        ],
        "format": "0000:1:0:001:--011--",
        "disasm": {
            "instr": 2188,
            "mask": 65436,
            "weight": 12
        },
        "name": "Skip on Non-Positive Accumulator",
        "mode": "Implied",
        "desc": "Skip next instruction if AC is negative or zero.",
        "flags": {},
        "groups": [
            "Flow Control",
            "SKP"
        ]
    },
    {
        "mnemonic": "(SKP) SSL",
        "split_mnemonic": [
            "SSL"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "0",
                "SUBOP": "001",
                "COND": "0",
                "IDX": "XX",
                "cycles": 3
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "0",
                "SUBOP": "001",
                "COND": "0",
                "IDX": "XX",
                "cycles": 3
            }
        ],
        "format": "0000:1:0:001:--0--1-",
        "disasm": {
            "instr": 2178,
            "mask": 65426,
            "weight": 11
        },
        "name": "Skip on Link",
        "mode": "Implied",
        "desc": "Skip next instruction if L is set.",
        "flags": {},
        "groups": [
            "Flow Control",
            "SKP"
        ]
    },
    {
        "mnemonic": "(SKP) SSV",
        "split_mnemonic": [
            "SSV"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "0",
                "SUBOP": "001",
                "COND": "0",
                "IDX": "XX",
                "cycles": 3
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "0",
                "SUBOP": "001",
                "COND": "0",
                "IDX": "XX",
                "cycles": 3
            }
        ],
        "format": "0000:1:0:001:--0---1",
        "disasm": {
            "instr": 2177,
            "mask": 65425,
            "weight": 11
        },
        "name": "Skip on Overflow",
        "mode": "Implied",
        "desc": "Skip next instruction if V is set.",
        "flags": {},
        "groups": [
            "Flow Control",
            "SKP"
        ]
    },
    {
        "mnemonic": "(SKP) SKIP",
        "split_mnemonic": [
            "SKIP"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "0",
                "SUBOP": "001",
                "COND": "0",
                "IDX": "XX",
                "cycles": 3
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "0",
                "SUBOP": "001",
                "COND": "0",
                "IDX": "XX",
                "cycles": 3
            }
        ],
        "format": "0000:1:0:001:--10000",
        "disasm": {
            "instr": 2192,
            "mask": 65439,
            "weight": 14
        },
        "name": "Skip",
        "mode": "Implied",
        "desc": "Always skip next instruction.",
        "flags": {},
        "groups": [
            "Flow Control",
            "SKP"
        ]
    },
    {
        "mnemonic": "(SKP) SNN",
        "split_mnemonic": [
            "SNN"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "0",
                "SUBOP": "001",
                "COND": "0",
                "IDX": "XX",
                "cycles": 3
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "0",
                "SUBOP": "001",
                "COND": "0",
                "IDX": "XX",
                "cycles": 3
            }
        ],
        "format": "0000:1:0:001:--11---",
        "disasm": {
            "instr": 2200,
            "mask": 65432,
            "weight": 11
        },
        "name": "Skip on Non-Negative Accumulator",
        "mode": "Implied",
        "desc": "Skip next instruction if AC is zero or greater.",
        "flags": {},
        "groups": [
            "Flow Control",
            "SKP"
        ]
    },
    {
        "mnemonic": "(SKP) SNZ",
        "split_mnemonic": [
            "SNZ"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "0",
                "SUBOP": "001",
                "COND": "0",
                "IDX": "XX",
                "cycles": 3
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "0",
                "SUBOP": "001",
                "COND": "0",
                "IDX": "XX",
                "cycles": 3
            }
        ],
        "format": "0000:1:0:001:--1-1--",
        "disasm": {
            "instr": 2196,
            "mask": 65428,
            "weight": 11
        },
        "name": "Skip on Non-Zero Accumulator",
        "mode": "Implied",
        "desc": "Skip next instruction if AC is non-zero.",
        "flags": {},
        "groups": [
            "Flow Control",
            "SKP"
        ]
    },
    {
        "mnemonic": "(SKP) SPA",
        "split_mnemonic": [
            "SPA"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "0",
                "SUBOP": "001",
                "COND": "0",
                "IDX": "XX",
                "cycles": 3
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "0",
                "SUBOP": "001",
                "COND": "0",
                "IDX": "XX",
                "cycles": 3
            }
        ],
        "format": "0000:1:0:001:--111--",
        "disasm": {
            "instr": 2204,
            "mask": 65436,
            "weight": 12
        },
        "name": "Skip on Positive Accumulator",
        "mode": "Implied",
        "desc": "Skip next instruction if AC is positive.",
        "flags": {},
        "groups": [
            "Flow Control",
            "SKP"
        ]
    },
    {
        "mnemonic": "(SKP) SCL",
        "split_mnemonic": [
            "SCL"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "0",
                "SUBOP": "001",
                "COND": "0",
                "IDX": "XX",
                "cycles": 3
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "0",
                "SUBOP": "001",
                "COND": "0",
                "IDX": "XX",
                "cycles": 3
            }
        ],
        "format": "0000:1:0:001:--1--1-",
        "disasm": {
            "instr": 2194,
            "mask": 65426,
            "weight": 11
        },
        "name": "Skip on Link Clear",
        "mode": "Implied",
        "desc": "Skip next instruction if L is clear.",
        "flags": {},
        "groups": [
            "Flow Control",
            "SKP"
        ]
    },
    {
        "mnemonic": "(SKP) SCV",
        "split_mnemonic": [
            "SCV"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "0",
                "SUBOP": "001",
                "COND": "0",
                "IDX": "XX",
                "cycles": 3
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "0",
                "SUBOP": "001",
                "COND": "0",
                "IDX": "XX",
                "cycles": 3
            }
        ],
        "format": "0000:1:0:001:--1---1",
        "disasm": {
            "instr": 2193,
            "mask": 65425,
            "weight": 11
        },
        "name": "Skip on Overflow",
        "mode": "Implied",
        "desc": "Skip next instruction if V is clear.",
        "flags": {},
        "groups": [
            "Flow Control",
            "SKP"
        ]
    },
    {
        "mnemonic": "RMB",
        "split_mnemonic": [
            "RMB"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "0",
                "SUBOP": "010",
                "COND": "X",
                "IDX": "XX",
                "cycles": 3
            }
        ],
        "format": "0000:1:0:010:----LLL",
        "disasm": {
            "instr": 2304,
            "mask": 65408,
            "weight": 9
        },
        "name": "Read Memory Bank",
        "mode": "Literal (3-bit)",
        "desc": "Transfers a Memory Bank Register to AC.",
        "flags": {
            "change": [
                "N",
                "Z"
            ]
        },
        "groups": [
            "Transfers"
        ]
    },
    {
        "mnemonic": "SMB",
        "split_mnemonic": [
            "SMB"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "0",
                "SUBOP": "011",
                "COND": "X",
                "IDX": "XX",
                "cycles": 3
            }
        ],
        "format": "0000:1:0:011:----LLL",
        "disasm": {
            "instr": 2432,
            "mask": 65408,
            "weight": 9
        },
        "name": "Set Memory Bank",
        "mode": "Literal (3-bit)",
        "desc": "Transfers the AC to a Memory Bank Register.",
        "flags": {},
        "groups": [
            "Transfers"
        ]
    },
    {
        "mnemonic": "JPA",
        "split_mnemonic": [
            "JPA"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "000",
                "COND": "X",
                "IDX": "XX",
                "cycles": 3
            }
        ],
        "format": "0000:1:1:000:-------",
        "disasm": {
            "instr": 3072,
            "mask": 65408,
            "weight": 9
        },
        "name": "Jump to Accumulator",
        "mode": "Accumulator",
        "desc": "Jump to address of AC relative to MBP.",
        "flags": {},
        "groups": [
            "Flow Control"
        ]
    },
    {
        "mnemonic": "JSA",
        "split_mnemonic": [
            "JSA"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "R": "1",
                "SUBOP": "001",
                "COND": "X",
                "IDX": "XX",
                "cycles": 5
            }
        ],
        "format": "0000:1:1:001:-------",
        "disasm": {
            "instr": 3200,
            "mask": 65408,
            "weight": 9
        },
        "name": "Jump to Subroutine at Accumulator",
        "mode": "Accumulator",
        "desc": "Jump to the subroutine address in AC relative to MBP.",
        "flags": {},
        "groups": [
            "Flow Control"
        ]
    },
    {
        "mnemonic": "IND",
        "split_mnemonic": [
            "IND"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "SUBOP": "111",
                "COND": "X",
                "IDX": "XX",
                "R": "0",
                "cycles": 5
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0000",
                "I": "1",
                "SUBOP": "111",
                "COND": "X",
                "IDX": "XX",
                "R": "1",
                "cycles": 5
            }
        ],
        "format": "0000:1:0:111:-------",
        "disasm": {
            "instr": 2944,
            "mask": 65408,
            "weight": 9
        },
        "name": "Indirect",
        "mode": "Accumulator Indirect",
        "desc": "Load memory from Accumulator",
        "flags": {},
        "groups": [
            "Flow Control"
        ]
    },
    {
        "mnemonic": "LIA",
        "split_mnemonic": [
            "LIA"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0001",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "0",
                "R": "0",
                "IDX": "XX",
                "cycles": 3
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0001",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "0",
                "R": "1",
                "IDX": "XX",
                "cycles": 3
            }
        ],
        "format": "0001:I:R:mmmmmmmmmm",
        "disasm": {
            "instr": 4096,
            "mask": 61440,
            "weight": 4
        },
        "name": "Literal Address",
        "mode": "",
        "desc": "",
        "flags": {
            "change": [
                "N",
                "Z"
            ]
        },
        "groups": [
            "Miscellaneous"
        ]
    },
    {
        "mnemonic": "LI",
        "split_mnemonic": [
            "LI"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0001",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "0",
                "R": "0",
                "IDX": "XX",
                "cycles": 3
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0001",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "0",
                "R": "1",
                "IDX": "XX",
                "cycles": 3
            }
        ],
        "format": "0001:0:1:LLLLLLLLLL",
        "disasm": {
            "instr": 5120,
            "mask": 64512,
            "weight": 6
        },
        "name": "Literal",
        "mode": "Literal",
        "desc": "",
        "flags": {
            "change": [
                "N",
                "Z"
            ]
        },
        "groups": [
            "Miscellaneous"
        ]
    },
    {
        "mnemonic": "LJSR",
        "split_mnemonic": [
            "LJSR"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0001",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "1",
                "R": "0",
                "IDX": "XX",
                "cycles": 11
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0001",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "1",
                "R": "1",
                "IDX": "00",
                "cycles": 11
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0001",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "1",
                "R": "1",
                "IDX": "01",
                "cycles": 16
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0001",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "1",
                "R": "1",
                "IDX": "10",
                "cycles": 16
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0001",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "1",
                "R": "1",
                "IDX": "11",
                "cycles": 16
            }
        ],
        "format": "0001:1:R:aaaaaaaaaa",
        "disasm": {
            "instr": 6144,
            "mask": 63488,
            "weight": 5
        },
        "name": "Long Jump to Subroutine",
        "mode": "",
        "desc": "Jump to subroutine in a non-local memory bank.",
        "flags": {},
        "groups": [
            "Flow Control"
        ]
    },
    {
        "mnemonic": "LJMP",
        "split_mnemonic": [
            "LJMP"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0010",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "1",
                "R": "0",
                "IDX": "XX",
                "cycles": 7
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0010",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "1",
                "R": "1",
                "IDX": "XX",
                "cycles": 7
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0010",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "1",
                "R": "1",
                "IDX": "01",
                "cycles": 12
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0010",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "1",
                "R": "1",
                "IDX": "10",
                "cycles": 12
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0010",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "1",
                "R": "1",
                "IDX": "11",
                "cycles": 12
            }
        ],
        "format": "0010:1:R:aaaaaaaaaa",
        "disasm": {
            "instr": 10240,
            "mask": 63488,
            "weight": 5
        },
        "name": "Long Jump",
        "mode": "",
        "desc": "Jump to an address in a non-local memory bank.",
        "flags": {},
        "groups": [
            "Flow Control"
        ]
    },
    {
        "mnemonic": "JSR",
        "split_mnemonic": [
            "JSR"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0011",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "0",
                "R": "X",
                "IDX": "XX",
                "cycles": 5
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0011",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "1",
                "R": "0",
                "IDX": "XX",
                "cycles": 6
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0011",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "1",
                "R": "1",
                "IDX": "XX",
                "cycles": 6
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0011",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "1",
                "R": "1",
                "IDX": "01",
                "cycles": 10
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0011",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "1",
                "R": "1",
                "IDX": "10",
                "cycles": 10
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0011",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "1",
                "R": "1",
                "IDX": "11",
                "cycles": 11
            }
        ],
        "format": "0011:I:R:mmmmmmmmmm",
        "disasm": {
            "instr": 12288,
            "mask": 61440,
            "weight": 4
        },
        "name": "Jump to Subroutine",
        "mode": "",
        "desc": "",
        "flags": {},
        "groups": [
            "Flow Control"
        ]
    },
    {
        "mnemonic": "JMP",
        "split_mnemonic": [
            "JMP"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0100",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "0",
                "R": "X",
                "IDX": "XX",
                "cycles": 3
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0100",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "1",
                "R": "0",
                "IDX": "XX",
                "cycles": 4
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0100",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "1",
                "R": "1",
                "IDX": "XX",
                "cycles": 4
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0100",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "1",
                "R": "1",
                "IDX": "01",
                "cycles": 8
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0100",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "1",
                "R": "1",
                "IDX": "10",
                "cycles": 8
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0100",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "1",
                "R": "1",
                "IDX": "11",
                "cycles": 9
            }
        ],
        "format": "0100:I:R:mmmmmmmmmm",
        "disasm": {
            "instr": 16384,
            "mask": 61440,
            "weight": 4
        },
        "name": "Jump",
        "mode": "",
        "desc": "",
        "flags": {},
        "groups": [
            "Flow Control"
        ]
    },
    {
        "mnemonic": "DSZ",
        "split_mnemonic": [
            "DSZ"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "1010",
                "SUBOP": "XXX",
                "COND": "1",
                "I": "0",
                "R": "0",
                "IDX": "XX",
                "cycles": 8
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "1010",
                "SUBOP": "XXX",
                "COND": "1",
                "I": "0",
                "R": "1",
                "IDX": "XX",
                "cycles": 8
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "1010",
                "SUBOP": "XXX",
                "COND": "1",
                "I": "1",
                "R": "0",
                "IDX": "XX",
                "cycles": 10
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "1010",
                "SUBOP": "XXX",
                "COND": "1",
                "I": "1",
                "R": "1",
                "IDX": "XX",
                "cycles": 10
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "1010",
                "SUBOP": "XXX",
                "COND": "1",
                "I": "1",
                "R": "1",
                "IDX": "01",
                "cycles": 10
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "1010",
                "SUBOP": "XXX",
                "COND": "1",
                "I": "1",
                "R": "1",
                "IDX": "10",
                "cycles": 10
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "1010",
                "SUBOP": "XXX",
                "COND": "1",
                "I": "1",
                "R": "1",
                "IDX": "11",
                "cycles": 10
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "1010",
                "SUBOP": "XXX",
                "COND": "0",
                "I": "0",
                "R": "0",
                "IDX": "XX",
                "cycles": 8
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "1010",
                "SUBOP": "XXX",
                "COND": "0",
                "I": "0",
                "R": "1",
                "IDX": "XX",
                "cycles": 8
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "1010",
                "SUBOP": "XXX",
                "COND": "0",
                "I": "1",
                "R": "0",
                "IDX": "XX",
                "cycles": 10
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "1010",
                "SUBOP": "XXX",
                "COND": "0",
                "I": "1",
                "R": "1",
                "IDX": "XX",
                "cycles": 10
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "1010",
                "SUBOP": "XXX",
                "COND": "0",
                "I": "1",
                "R": "1",
                "IDX": "01",
                "cycles": 10
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "1010",
                "SUBOP": "XXX",
                "COND": "0",
                "I": "1",
                "R": "1",
                "IDX": "10",
                "cycles": 10
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "1010",
                "SUBOP": "XXX",
                "COND": "0",
                "I": "1",
                "R": "1",
                "IDX": "11",
                "cycles": 10
            }
        ],
        "format": "1010:I:R:mmmmmmmmmm",
        "disasm": {
            "instr": 40960,
            "mask": 61440,
            "weight": 4
        },
        "name": "Decrement and Skip if Zero",
        "mode": "",
        "desc": "Decrements memory by one and skips the next instruction if zero.",
        "flags": {
            "change": [
                "N"
            ]
        },
        "groups": [
            "Flow Control",
            "Memory"
        ]
    },
    {
        "mnemonic": "LOAD",
        "split_mnemonic": [
            "LOAD"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "1000",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "0",
                "R": "0",
                "IDX": "XX",
                "cycles": 4
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "1000",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "0",
                "R": "1",
                "IDX": "XX",
                "cycles": 4
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "1000",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "1",
                "R": "0",
                "IDX": "XX",
                "cycles": 6
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "1000",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "1",
                "R": "1",
                "IDX": "XX",
                "cycles": 6
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "1000",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "1",
                "R": "1",
                "IDX": "01",
                "cycles": 8
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "1000",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "1",
                "R": "1",
                "IDX": "10",
                "cycles": 8
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "1000",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "1",
                "R": "1",
                "IDX": "11",
                "cycles": 9
            }
        ],
        "format": "1000:I:R:mmmmmmmmmm",
        "disasm": {
            "instr": 32768,
            "mask": 61440,
            "weight": 4
        },
        "name": "Load Accumulator",
        "mode": "",
        "desc": "Loads AC from the specified memory address",
        "flags": {
            "change": [
                "N",
                "Z"
            ]
        },
        "groups": [
            "Memory"
        ]
    },
    {
        "mnemonic": "STORE",
        "split_mnemonic": [
            "STORE"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "1001",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "0",
                "R": "0",
                "IDX": "XX",
                "cycles": 4
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "1001",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "0",
                "R": "1",
                "IDX": "XX",
                "cycles": 4
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "1001",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "1",
                "R": "0",
                "IDX": "XX",
                "cycles": 6
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "1001",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "1",
                "R": "1",
                "IDX": "XX",
                "cycles": 6
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "1001",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "1",
                "R": "1",
                "IDX": "01",
                "cycles": 8
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "1001",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "1",
                "R": "1",
                "IDX": "10",
                "cycles": 8
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "1001",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "1",
                "R": "1",
                "IDX": "11",
                "cycles": 8
            }
        ],
        "format": "1001:I:R:mmmmmmmmmm",
        "disasm": {
            "instr": 36864,
            "mask": 61440,
            "weight": 4
        },
        "name": "Store Accumulator",
        "mode": "",
        "desc": "Stores AC to the specified memory address",
        "flags": {},
        "groups": [
            "Memory"
        ]
    },
    {
        "mnemonic": "IN",
        "split_mnemonic": [
            "IN"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0101",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "0",
                "R": "X",
                "IDX": "XX",
                "cycles": 4
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0101",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "1",
                "R": "X",
                "IDX": "XX",
                "cycles": 6
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0101",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "1",
                "R": "1",
                "IDX": "01",
                "cycles": 8
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0101",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "1",
                "R": "1",
                "IDX": "10",
                "cycles": 8
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0101",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "1",
                "R": "1",
                "IDX": "11",
                "cycles": 8
            }
        ],
        "format": "0101:I:R:mmmmmmmmmm",
        "disasm": {
            "instr": 20480,
            "mask": 61440,
            "weight": 4
        },
        "name": "Input from I/O Space",
        "mode": "",
        "desc": "Loads AC from an I/O Space address",
        "flags": {
            "change": [
                "N",
                "Z"
            ]
        },
        "groups": [
            "Input/Output"
        ]
    },
    {
        "mnemonic": "OUT",
        "split_mnemonic": [
            "OUT"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0110",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "0",
                "R": "X",
                "IDX": "XX",
                "cycles": 4
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0110",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "0",
                "R": "1",
                "IDX": "XX",
                "cycles": 4
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0110",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "1",
                "R": "1",
                "IDX": "01",
                "cycles": 8
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0110",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "1",
                "R": "1",
                "IDX": "10",
                "cycles": 8
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0110",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "1",
                "R": "1",
                "IDX": "11",
                "cycles": 8
            }
        ],
        "format": "0110:I:R:mmmmmmmmmm",
        "disasm": {
            "instr": 24576,
            "mask": 61440,
            "weight": 4
        },
        "name": "Output to I/O Space",
        "mode": "",
        "desc": "Writes AC to an I/O Space address",
        "flags": {},
        "groups": [
            "Input/Output"
        ]
    },
    {
        "mnemonic": "IOT",
        "split_mnemonic": [
            "IOT"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0111",
                "SUBOP": "XXX",
                "COND": "1",
                "I": "0",
                "R": "X",
                "IDX": "XX",
                "cycles": 6
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0111",
                "SUBOP": "XXX",
                "COND": "1",
                "I": "1",
                "R": "X",
                "IDX": "XX",
                "cycles": 8
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0111",
                "SUBOP": "XXX",
                "COND": "1",
                "I": "1",
                "R": "1",
                "IDX": "01",
                "cycles": 10
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0111",
                "SUBOP": "XXX",
                "COND": "1",
                "I": "1",
                "R": "1",
                "IDX": "10",
                "cycles": 10
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0111",
                "SUBOP": "XXX",
                "COND": "1",
                "I": "1",
                "R": "1",
                "IDX": "11",
                "cycles": 10
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0111",
                "SUBOP": "XXX",
                "COND": "0",
                "I": "0",
                "R": "X",
                "IDX": "XX",
                "cycles": 6
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0111",
                "SUBOP": "XXX",
                "COND": "0",
                "I": "1",
                "R": "0",
                "IDX": "XX",
                "cycles": 8
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0111",
                "SUBOP": "XXX",
                "COND": "0",
                "I": "1",
                "R": "1",
                "IDX": "XX",
                "cycles": 10
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0111",
                "SUBOP": "XXX",
                "COND": "0",
                "I": "1",
                "R": "1",
                "IDX": "01",
                "cycles": 10
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "0111",
                "SUBOP": "XXX",
                "COND": "0",
                "I": "1",
                "R": "1",
                "IDX": "10",
                "cycles": 10
            }
        ],
        "format": "0111:I:R:mmmmmmmmmm",
        "disasm": {
            "instr": 28672,
            "mask": 61440,
            "weight": 4
        },
        "name": "I/O Transaction",
        "mode": "",
        "desc": "Writes AC to an I/O Space address and Reads it Back",
        "flags": {
            "change": [
                "N",
                "Z"
            ]
        },
        "groups": [
            "Input/Output"
        ]
    },
    {
        "mnemonic": "ADD",
        "split_mnemonic": [
            "ADD"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "1100",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "0",
                "R": "0",
                "IDX": "XX",
                "cycles": 5
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "1100",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "0",
                "R": "1",
                "IDX": "XX",
                "cycles": 5
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "1100",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "1",
                "R": "0",
                "IDX": "XX",
                "cycles": 7
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "1100",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "1",
                "R": "1",
                "IDX": "XX",
                "cycles": 7
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "1100",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "1",
                "R": "1",
                "IDX": "01",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "1100",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "1",
                "R": "1",
                "IDX": "10",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "1100",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "1",
                "R": "1",
                "IDX": "11",
                "cycles": 10
            }
        ],
        "format": "1100:I:R:mmmmmmmmmm",
        "disasm": {
            "instr": 49152,
            "mask": 61440,
            "weight": 4
        },
        "name": "Add To Accumulator",
        "mode": "",
        "desc": "Adds the value at the specified memory address to the AC.",
        "flags": {
            "change": [
                "N",
                "Z",
                "V",
                "L"
            ]
        },
        "groups": [
            "Arithmetic and Logic"
        ]
    },
    {
        "mnemonic": "AND",
        "split_mnemonic": [
            "AND"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "1101",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "0",
                "R": "0",
                "IDX": "XX",
                "cycles": 5
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "1101",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "0",
                "R": "1",
                "IDX": "XX",
                "cycles": 5
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "1101",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "1",
                "R": "0",
                "IDX": "XX",
                "cycles": 7
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "1101",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "1",
                "R": "1",
                "IDX": "XX",
                "cycles": 7
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "1101",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "1",
                "R": "1",
                "IDX": "01",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "1101",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "1",
                "R": "1",
                "IDX": "10",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "1101",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "1",
                "R": "1",
                "IDX": "11",
                "cycles": 10
            }
        ],
        "format": "1101:I:R:mmmmmmmmmm",
        "disasm": {
            "instr": 53248,
            "mask": 61440,
            "weight": 4
        },
        "name": "Bitwise AND With Accumulator",
        "mode": "",
        "desc": "Bitwise ANDs the value at the specified memory address and AC.",
        "flags": {
            "change": [
                "N",
                "Z"
            ]
        },
        "groups": [
            "Arithmetic and Logic"
        ]
    },
    {
        "mnemonic": "OR",
        "split_mnemonic": [
            "OR"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "1110",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "0",
                "R": "0",
                "IDX": "XX",
                "cycles": 5
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "1110",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "0",
                "R": "1",
                "IDX": "XX",
                "cycles": 5
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "1110",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "1",
                "R": "0",
                "IDX": "XX",
                "cycles": 7
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "1110",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "1",
                "R": "1",
                "IDX": "XX",
                "cycles": 7
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "1110",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "1",
                "R": "1",
                "IDX": "01",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "1110",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "1",
                "R": "1",
                "IDX": "10",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "1110",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "1",
                "R": "1",
                "IDX": "11",
                "cycles": 10
            }
        ],
        "format": "1110:I:R:mmmmmmmmmm",
        "disasm": {
            "instr": 57344,
            "mask": 61440,
            "weight": 4
        },
        "name": "Bitwise OR With Accumulator",
        "mode": "",
        "desc": "Bitwise ORs the value at the specified memory address and AC.",
        "flags": {
            "change": [
                "N",
                "Z"
            ]
        },
        "groups": [
            "Arithmetic and Logic"
        ]
    },
    {
        "mnemonic": "XOR",
        "split_mnemonic": [
            "XOR"
        ],
        "microprograms": [
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "1111",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "0",
                "R": "0",
                "IDX": "XX",
                "cycles": 5
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "1111",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "0",
                "R": "1",
                "IDX": "XX",
                "cycles": 5
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "1111",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "1",
                "R": "0",
                "IDX": "XX",
                "cycles": 7
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "1111",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "1",
                "R": "1",
                "IDX": "XX",
                "cycles": 7
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "1111",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "1",
                "R": "1",
                "IDX": "01",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "1111",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "1",
                "R": "1",
                "IDX": "10",
                "cycles": 9
            },
            {
                "RST": "1",
                "INT": "1",
                "RESERVED": "X",
                "OP": "1111",
                "SUBOP": "XXX",
                "COND": "X",
                "I": "1",
                "R": "1",
                "IDX": "11",
                "cycles": 10
            }
        ],
        "format": "1111:I:R:mmmmmmmmmm",
        "disasm": {
            "instr": 61440,
            "mask": 61440,
            "weight": 4
        },
        "name": "Bitwise XOR With Accumulator",
        "mode": "",
        "desc": "Bitwise XORs the value at the specified memory address and AC.",
        "flags": {
            "change": [
                "N",
                "Z"
            ]
        },
        "groups": [
            "Arithmetic and Logic"
        ]
    }
]
