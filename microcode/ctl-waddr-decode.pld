GAL16V8         ; this is the GAL type
CUWDEC00        ; this is the signature


; 1     2       3       4       5       6       7       8       9       10
WA4     WA3     WA2     WA1     WA0     NC0     NC1     NC2     CLK4    GND
NC4     NC5     XORA    XORB    XORY    WIR     WF      WPC     WDR     VCC
;11     12      13      14      15      16      17      18      19      20

/WPC =    /CLK4 * /WA4 * WA3 * /WA2 * /WA1 * /WA0

/WDR =    /CLK4 * /WA4 * WA3 * /WA2 * /WA1 *  WA0

/WIR =    /CLK4 * /WA4 * WA3 *  WA2 *  WA1 *  WA0

/WF = /CLK4 *  WA4 * WA3 *  WA2 *  WA1


; This is the single XOR gate in the Skip/Branch Unit. Putting it here saves a
; chip package, and we have the space. Plus, this GAL is very close to the SBU
; physically.
;

; Update it was more convenient to use a 74HC86 in the end, but this
; can stay here in case I need an extra gate somewhere.

XORY = /XORA * XORB  +  XORA * /XORB


DESCRIPTION

MBU GAL EQUATIONS

Inputs: (active low unless otherwise stated)

WADDR    -- The read address
CLK4     -- Write strobe clock
XORA     -- XOR input A, used by the Skip/Branch Unit.
XORB     -- XOR input B

Outputs:

/WPC     -- Write to the PC
/WDR     -- Write to the DR
/WIR     -- Write to the IR
/FLAGOE  -- Write to the flag unit
XORY     -- Output of the XOR gate


; signal write_pc        = ..............01000.....; // Write to PC
; signal write_dr        = ..............01001.....; // Write to DR
; signal write_ir        = ..............01111.....; // Write to the Instruction Register
; signal write_ctx_flags = ..............11110.....; // Write CTX & flags vector
; signal write_flags     = ..............11111.....; // Write flags


; End of file.
